//Longest Consecutive subsequence//

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	        int arr[] = {7,1,5,9,13,6,12,7,11,14};
	        int ans=1;
		HashSet<Integer> box =new HashSet<>();
		for(int i=0;i<arr.length;i++){
		        box.add(arr[i]);
		}
		for(int i=0;i<arr.length;i++){
		       int s = arr[i];

		       if(box.contains(s-1)){
		               continue;
		       }
		       while(box.contains(s)){
		               s++;
		       }
		       ans= Math.max(ans,s-arr[i]);
		}
	 System.out.println(ans);
	}
}
// Majority element by Hashmap//

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	        int arr[] = {2,4,2,5,2,2,6};
		HashMap<Integer,Integer> box =new HashMap<>();
		for(int i=0;i<arr.length;i++){
		        box.put(arr[i],0);
		}
		
                int count = 0;

		for(int i=0;i<arr.length;i++){
		        box.put(arr[i],box.get(arr[i])+1);
		        if(box.get(arr[i]) >arr.length/2){
		                count = arr[i];
		        }
		}
                System.out.println(count);


	}
}

// Majority element by Moore voting algo//


import java.util.*;
public class Main
{
	public static void main(String[] args) {
	        int arr[] = {2,4,5,5,2,2,6};
		int f =0,votes=0;
		int candidate = arr[0];
		for(int i=1;i<arr.length;i++){
		        if(candidate == arr[i]){
		                votes++;
		        }
		        else{
		                votes--;
		        }
		        if(votes == 0){
		                candidate = arr[i];
		                votes =1;
		        }
		   
		}
		 for(int i=0;i<arr.length;i++){
		                if(arr[i] ==candidate){
		                        f++;
		                }
		        }
		        if(f>arr.length/2){
		                System.out.println(candidate);
		        }
                        else{
                             System.out.println(-1);    
                        }
               


	}
}